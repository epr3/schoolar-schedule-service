"""empty message

Revision ID: b8cfb4bb5fa0
Revises:
Create Date: 2019-04-21 13:52:24.018191

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'b8cfb4bb5fa0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faculties',
                    sa.Column(
                        'id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('groups',
                    sa.Column(
                        'id', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
                    sa.Column('number', sa.String(), nullable=False),
                    sa.Column('year', sa.String(), nullable=False),
                    sa.Column('facultyId', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['facultyId'], ['faculties.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('subjects',
                    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(
                    ), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('credits', sa.Integer(), nullable=False),
                    sa.Column('facultyId', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['facultyId'], ['faculties.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('courses',
                    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(
                    ), nullable=False),
                    sa.Column('course_path', sa.String(), nullable=False),
                    sa.Column('subjectId', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['subjectId'], ['subjects.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('events',
                    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(
                    ), nullable=False),
                    sa.Column('room', sa.String(), nullable=True),
                    sa.Column('interval', sa.Integer(), nullable=False),
                    sa.Column('frequency', sa.String(), nullable=False),
                    sa.Column('startDate', sa.DateTime(), nullable=False),
                    sa.Column('endDate', sa.DateTime(), nullable=False),
                    sa.Column('duration', sa.Integer(), nullable=False),
                    sa.Column('isFullDay', sa.Boolean(), nullable=True),
                    sa.Column('isNotifiable', sa.Boolean(), nullable=True),
                    sa.Column('subjectId', sa.String(), nullable=True),
                    sa.Column('groupId', sa.String(), nullable=False),
                    sa.Column('professorId', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['groupId'], ['groups.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['subjectId'], ['subjects.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('courses')
    op.drop_table('subjects')
    op.drop_table('groups')
    op.drop_table('faculties')
    # ### end Alembic commands ###
